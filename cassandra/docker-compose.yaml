version: '3.9'

volumes:
    kong_data: {}

services:
  cassandra:
    image: cassandra:3
    container_name: cassandra
    restart: always
    healthcheck:
        test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        interval: 15s
        timeout: 10s
        retries: 10
    environment:
      CASSANDRA_CLUSTER_NAME: "KongCluster"
      CASSANDRA_NUM_TOKENS: "256"
      MAX_HEAP_SIZE: "512M"
      HEAP_NEWSIZE: "100M"
    ports:
      - "9042:9042"

  kong-migrations:
    image: kong/kong-gateway:2.8.4.12-alpine
    container_name: kong-migrations
    # command: "kong migrations up"
    command: "kong migrations bootstrap"
    depends_on:
      cassandra:
        condition: service_healthy 
    environment:
      KONG_PASSWORD: password
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_CASSANDRA_CONTACT_POINTS: cassandra
      KONG_DB_UPDATE_PROPAGATION: 5
      KONG_DB_UPDATE_FREQUENCY: 10
      KONG_DATABASE: cassandra
      KONG_VAULTS: "off"
      CASSANDRA_SCHEMA_CONSENSUS_TIMEOUT: 30000   
    restart: on-failure


  kong-cp:
    image: kong/kong-gateway:2.8.4.12-alpine
    container_name: kong-cp
    user: "${KONG_USER:-kong}"
    depends_on:
      cassandra:
        condition: service_healthy 
    environment:
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}

      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key

      KONG_CASSANDRA_CONTACT_POINTS: cassandra
      KONG_DB_UPDATE_PROPAGATION: 5
      KONG_DB_UPDATE_FREQUENCY: 10
      KONG_DATABASE: cassandra
      KONG_CASSANDRA_SCHEMA_CONSENSUS_TIMEOUT: 30000
      KONG_ENFORCE_RBAC: "on"
      KONG_NGINX_WORKER_PROCESSES: 2
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_LOG_LEVEL: debug
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_API_URI: "http://localhost:8001"
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002, 0.0.0.0:8445 ssl
      KONG_ADMIN_GUI_URL: "http://localhost:8002"
      #below disabled for oidc
      KONG_ADMIN_GUI_AUTH: "basic-auth"
      KONG_ALLOW_DEBUG_HEADER: "on"
      KONG_ADMIN_GUI_SESSION_CONF: '{ "cookie_name":"kong_manager_session", "secret":"set-your-string-here", "storage":"kong", "cookie_secure": false, "cookie_lifetime": 3600 }'
      KONG_VITALS: "on"
      KONG_STATUS_LISTEN: "0.0.0.0:8100"
      KONG_PORTAL: "off"
      #keyring enabled
      KONG_KEYRING_ENABLED: on
      KONG_KEYRING_STRATEGY: cluster
      KONG_KEYRING_PUBLIC_KEY: /certs/cert.pem
      KONG_KEYRING_PRIVATE_KEY: /certs/key.pem
      # added for oids
      # KONG_ADMIN_GUI_AUTH: "openid-connect"
      # KONG_ADMIN_GUI_AUTH_CONF: '{ 
      #   "issuer": "http://172.16.87.128:8080/auth/realms/kong/.well-known/openid-configuration", 
      #   "client_id": ["kong"], 
      #   "client_secret": ["IoWCD8nqknsyQoKM0IkghljAJE6GiQub"], 
      #   "redirect_uri": ["http://localhost:8001/auth"], 
      #   "scopes": ["openid", "email", "offline_access"], 
      #   "login_redirect_uri": ["http://localhost:8002"], 
      #   "logout_redirect_uri": ["http://localhost:8002"], 
      #   "admin_claim": "preferred_username", 
      #   "authenticated_groups_claim": ["groups"]
      # }'
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8002:8002/tcp"
      - "8005:8005/tcp"
      - "8003:8003/tcp"
      - "8004:8004/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
      - "8445:8445/tcp"
      - "8446:8446/tcp"
      - "8447:8447/tcp"
      - "8100:8100/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - ./certs:/certs
    restart: on-failure


  kong-dp:
    image: kong/kong-gateway:2.8.4.12-alpine
    container_name: kong-dp
    user: "${KONG_USER:-kong}"
    depends_on:
      cassandra:
        condition: service_healthy 
    environment:
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_ROLE: data_plane
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key
      KONG_CLUSTER_CONTROL_PLANE: kong-cp:8005
      KONG_CLUSTER_TELEMETRY_ENDPOINT: kong-cp:8006 
      KONG_DATABASE: "off"
      KONG_NGINX_WORKER_PROCESSES: 2
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_LOG_LEVEL: debug
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl
      KONG_ALLOW_DEBUG_HEADER: "on"
      KONG_VITALS: "on"
      KONG_STATUS_LISTEN: "0.0.0.0:8100"
    ports:
      - "9000:8000/tcp"
      - "7443:8443/tcp"
      - "7100:8100/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - ./certs:/certs
    restart: on-failure

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: on-failure:10
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8201'
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8201'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    healthcheck:
      retries: 5
    ports:
      - "8201:8201"


  httpbin-1:
    image: kennethreitz/httpbin
    container_name: httpbin-1
  

  # keycloak:
  #   image: quay.io/keycloak/keycloak:25.0.1
  #   container_name: keycloak
  #   ports:
  #     - 8080:8080
  #   environment:
  #     - KEYCLOAK_ADMIN=admin
  #     - KEYCLOAK_ADMIN_PASSWORD=admin
  #   command: start-dev
