version: '3.9'

volumes:
  db-data:
    driver: local

services:
  kong-migrations:
    image: kong/kong-gateway:3.5.0.3
    container_name: kong-migrations
    # command: "kong migrations up"
    command: "kong migrations bootstrap"
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}    
    restart: on-failure



  kong-db:
    image: postgres:13.1
    container_name: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: on-failure
    stdin_open: true
    tty: true
    ports:
      - 5432:5432/tcp



  kong-cp:
    image: kong/kong-gateway:3.5.0.3
    container_name: kong-cp
    user: "${KONG_USER:-kong}"
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}

      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key

      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ENFORCE_RBAC: "on"
      KONG_NGINX_WORKER_PROCESSES: 2
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_LOG_LEVEL: debug
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_API_URI: "http://localhost:8001"
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002, 0.0.0.0:8445 ssl
      KONG_ADMIN_GUI_URL: "http://localhost:8002"
      KONG_ADMIN_GUI_AUTH: "basic-auth"
      KONG_ALLOW_DEBUG_HEADER: "on"
      KONG_ADMIN_GUI_SESSION_CONF: '{ "cookie_name":"kong_manager_session", "secret":"set-your-string-here", "storage":"kong", "cookie_secure": false, "cookie_lifetime": 3600 }'
      KONG_VITALS: "off"
      KONG_STATUS_LISTEN: "0.0.0.0:8100"
      KONG_PORTAL: "off"
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8002:8002/tcp"
      - "8005:8005/tcp"
      - "8003:8003/tcp"
      - "8004:8004/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
      - "8445:8445/tcp"
      - "8446:8446/tcp"
      - "8447:8447/tcp"
      - "8100:8100/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - ./certs:/certs
    restart: on-failure



  kong-dp:
    image: kong/kong-gateway:3.5.0.3
    container_name: kong-dp
    user: "${KONG_USER:-kong}"
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_ROLE: data_plane
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key
      KONG_CLUSTER_CONTROL_PLANE: kong-cp:8005
      KONG_CLUSTER_TELEMETRY_ENDPOINT: kong-cp:8006 
      KONG_DATABASE: "off"
      KONG_NGINX_WORKER_PROCESSES: 2
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_LOG_LEVEL: debug
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl
      KONG_ALLOW_DEBUG_HEADER: "on"
      KONG_VITALS: "off"
      KONG_STATUS_LISTEN: "0.0.0.0:8100"
    ports:
      - "7000:8000/tcp"
      - "7443:8443/tcp"
      - "7100:8100/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - ./certs:/certs
    restart: on-failure




  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: on-failure:10
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8201'
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8201'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    healthcheck:
      retries: 5
    ports:
      - "8201:8201"



  httpbin-1:
    image: kennethreitz/httpbin
    container_name: httpbin-1
